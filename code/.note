Type guard to restore access to one of the spesific types of inside of union operator 
class Object {
  constructor(public data: number[] | string)
  // Type guard "this.data instanceof Array"
  if (this.data instanceof Array) {
    // do stuff that Array does
  } else if (this.data instanceof String) {
    do stuff that String does
  }
}
Type guard for primitive values:
  typeof number, string, boolean, symbol

for every other type of value
  instanseof 

Interfaces: Sets up a contract between different classes
            Use when we have very different objects that we want to work together
            Promotes loose coupling

Inheritance/
Abstract Classes: Sets up a contract between different classes
                  Use when we are trying to build up a definition of an objects
                  strongly couples classes together